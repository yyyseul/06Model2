<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">

	<resultMap type="product" id="productSelectMap">
		<result property="prodNo"	column="prod_no"	jdbcType="INTEGER"/>
		<result property="prodName"	column="prod_name"	jdbcType="VARCHAR"/>
		<result property="prodDetail"	column="prod_detail"	jdbcType="VARCHAR"/>
		<result property="manuDate"	column="manufacture_day"	jdbcType="VARCHAR"/>
		<result property="price"	column="price"	jdbcType="INTEGER"/>
		<result property="fileName"	column="image_file"	jdbcType="VARCHAR"/>
		<result property="regDate"	column="reg_date"	jdbcType="DATE"/>
		<result property="proTranCode"	column="tran_code"	jdbcType="CHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
		INSERT
		INTO product(prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date)
		VALUES (seq_product_prod_no.NEXTVAL, #{prodName}, #{prodDetail:VARCHAR}, #{manuDate:VARCHAR},
				 #{price:INTEGER}, #{fileName:VARCHAR}, SYSDATE)
	
	</insert>
	
	<!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file, p.reg_date, 
		NVL(t.tran_status_code,'1') AS tran_code		
		FROM product p, transaction t 
		WHERE p.prod_no=t.prod_no(+) AND p.prod_no = #{value}
	
	</select>
	
	<!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day 				= #{manuDate} ,
			price				=	#{price},
			image_file	= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
	 
	 <!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.*, NVL(t.tran_status_code,'1') AS tran_code
											FROM product p, transaction t
											WHERE p.prod_no=t.prod_no(+) 
											<if test="searchCondition != null">
												
													<if test="searchCondition == 0 and searchKeyword !='' ">
											 			AND p.prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
											 			AND p.prod_name LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
											 			AND p.price = #{searchKeyword}
													</if>
												
											</if>
											ORDER BY p.prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->


	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no, prod_name , price , reg_date
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_name LIKE '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 			price = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>

</mapper>